// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package force

import (
	"testing"
	"math"
	"github.com/google/go-cmp/cmp"
)

func withinTolerance() cmp.Option {
	return cmp.Comparer(func(x, y float64) bool {
		delta := math.Abs(x - y)
		mean := math.Abs(x + y) / 2.0
		return delta / mean < 0.01
	})
}
func TestConvertKnownDynesToNewtons(t * testing.T) {
    if !cmp.Equal(Dynes.ToNewtons(900.0), 0.009, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.009, Dynes.ToNewtons(900.0));
    }
    if !cmp.Equal(Dynes.ToNewtons(1234.0), 0.01234, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.01234, Dynes.ToNewtons(1234.0));
    }
    if !cmp.Equal(Dynes.ToNewtons(46.0), 0.00046, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.00046, Dynes.ToNewtons(46.0));
    }
}

func TestConvertKnownDynesToPoundals(t * testing.T) {
    if !cmp.Equal(Dynes.ToPoundals(10099.0), 0.73046207, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.73046207, Dynes.ToPoundals(10099.0));
    }
    if !cmp.Equal(Dynes.ToPoundals(80000.0), 5.7864111, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5.7864111, Dynes.ToPoundals(80000.0));
    }
    if !cmp.Equal(Dynes.ToPoundals(12345.0), 0.89291556, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.89291556, Dynes.ToPoundals(12345.0));
    }
}

func TestConvertKnownDynesToKilogramforce(t * testing.T) {
    if !cmp.Equal(Dynes.ToKilogramforce(123456.0), 0.125890085, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.125890085, Dynes.ToKilogramforce(123456.0));
    }
    if !cmp.Equal(Dynes.ToKilogramforce(80000.0), 0.081577297, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.081577297, Dynes.ToKilogramforce(80000.0));
    }
    if !cmp.Equal(Dynes.ToKilogramforce(987654321.0), 1007.12712394, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1007.12712394, Dynes.ToKilogramforce(987654321.0));
    }
}

func TestConvertKnownKilogramforceToNewtons(t * testing.T) {
    if !cmp.Equal(Kilogramforce.ToNewtons(16.0), 156.906, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 156.906, Kilogramforce.ToNewtons(16.0));
    }
    if !cmp.Equal(Kilogramforce.ToNewtons(9.3), 91.2018, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 91.2018, Kilogramforce.ToNewtons(9.3));
    }
    if !cmp.Equal(Kilogramforce.ToNewtons(5.0), 49.0332, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 49.0332, Kilogramforce.ToNewtons(5.0));
    }
}

func TestConvertKnownKilogramforceToDynes(t * testing.T) {
    if !cmp.Equal(Kilogramforce.ToDynes(0.1), 98066.5, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 98066.5, Kilogramforce.ToDynes(0.1));
    }
    if !cmp.Equal(Kilogramforce.ToDynes(0.009), 8825.985, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 8825.985, Kilogramforce.ToDynes(0.009));
    }
    if !cmp.Equal(Kilogramforce.ToDynes(2.0), 1961330.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1961330.0, Kilogramforce.ToDynes(2.0));
    }
}

func TestConvertKnownKilogramforceToPoundals(t * testing.T) {
    if !cmp.Equal(Kilogramforce.ToPoundals(2.0), 141.863, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 141.863, Kilogramforce.ToPoundals(2.0));
    }
    if !cmp.Equal(Kilogramforce.ToPoundals(8.4), 595.826, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 595.826, Kilogramforce.ToPoundals(8.4));
    }
    if !cmp.Equal(Kilogramforce.ToPoundals(0.9), 63.8385, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 63.8385, Kilogramforce.ToPoundals(0.9));
    }
}

func TestConvertKnownNewtonsToDynes(t * testing.T) {
    if !cmp.Equal(Newtons.ToDynes(0.7), 70000.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 70000.0, Newtons.ToDynes(0.7));
    }
    if !cmp.Equal(Newtons.ToDynes(0.08), 8000.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 8000.0, Newtons.ToDynes(0.08));
    }
    if !cmp.Equal(Newtons.ToDynes(2.3), 230000.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 230000.0, Newtons.ToDynes(2.3));
    }
}

func TestConvertKnownNewtonsToPoundals(t * testing.T) {
    if !cmp.Equal(Newtons.ToPoundals(190.0), 1374.27, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1374.27, Newtons.ToPoundals(190.0));
    }
    if !cmp.Equal(Newtons.ToPoundals(0.7), 5.06311, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5.06311, Newtons.ToPoundals(0.7));
    }
    if !cmp.Equal(Newtons.ToPoundals(89.0), 643.738, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 643.738, Newtons.ToPoundals(89.0));
    }
}

func TestConvertKnownNewtonsToKilogramforce(t * testing.T) {
    if !cmp.Equal(Newtons.ToKilogramforce(8.7), 0.887153, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.887153, Newtons.ToKilogramforce(8.7));
    }
    if !cmp.Equal(Newtons.ToKilogramforce(109.0), 11.1149, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 11.1149, Newtons.ToKilogramforce(109.0));
    }
    if !cmp.Equal(Newtons.ToKilogramforce(6.9), 0.703604, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.703604, Newtons.ToKilogramforce(6.9));
    }
}

func TestConvertKnownPoundalsToNewtons(t * testing.T) {
    if !cmp.Equal(Poundals.ToNewtons(800.0), 110.604, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 110.604, Poundals.ToNewtons(800.0));
    }
    if !cmp.Equal(Poundals.ToNewtons(8.2), 1.13369, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.13369, Poundals.ToNewtons(8.2));
    }
    if !cmp.Equal(Poundals.ToNewtons(190.0), 26.2684, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 26.2684, Poundals.ToNewtons(190.0));
    }
}

func TestConvertKnownPoundalsToDynes(t * testing.T) {
    if !cmp.Equal(Poundals.ToDynes(0.01), 138.255, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 138.255, Poundals.ToDynes(0.01));
    }
    if !cmp.Equal(Poundals.ToDynes(2.0), 27651.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 27651.0, Poundals.ToDynes(2.0));
    }
    if !cmp.Equal(Poundals.ToDynes(0.9), 12442.94589384, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 12442.94589384, Poundals.ToDynes(0.9));
    }
}

func TestConvertKnownPoundalsToKilogramforce(t * testing.T) {
    if !cmp.Equal(Poundals.ToKilogramforce(34.0), 0.479335, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.479335, Poundals.ToKilogramforce(34.0));
    }
    if !cmp.Equal(Poundals.ToKilogramforce(101.1), 1.4253161, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.4253161, Poundals.ToKilogramforce(101.1));
    }
    if !cmp.Equal(Poundals.ToKilogramforce(9.5), 0.133932, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.133932, Poundals.ToKilogramforce(9.5));
    }
}

