// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package energy

import (
	"math"
	"testing"

	"github.com/google/go-cmp/cmp"
)

func withinTolerance() cmp.Option {
	return cmp.Comparer(func(x, y float64) bool {
		delta := math.Abs(x - y)
		mean := math.Abs(x+y) / 2.0
		return delta/mean < 0.01
	})
}
func TestConvertKnownBtuToKilojoules(t *testing.T) {
	if !cmp.Equal(Btu.ToKilojoules(100.0), 105.506, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 105.506, Btu.ToKilojoules(100.0))
	}
	if !cmp.Equal(Btu.ToKilojoules(987.65), 1042.03, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1042.03, Btu.ToKilojoules(987.65))
	}
	if !cmp.Equal(Btu.ToKilojoules(555666.0), 586258.6917293, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 586258.6917293, Btu.ToKilojoules(555666.0))
	}
}

func TestConvertKnownBtuToKilocalories(t *testing.T) {
	if !cmp.Equal(Btu.ToKilocalories(67.9), 17.12196, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 17.12196, Btu.ToKilocalories(67.9))
	}
	if !cmp.Equal(Btu.ToKilocalories(109.9), 27.712867639325825, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 27.712867639325825, Btu.ToKilocalories(109.9))
	}
	if !cmp.Equal(Btu.ToKilocalories(5000.0), 1260.8220036090, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1260.8220036090, Btu.ToKilocalories(5000.0))
	}
}

func TestConvertKnownBtuToJoules(t *testing.T) {
	if !cmp.Equal(Btu.ToJoules(5.0), 5275.3, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 5275.3, Btu.ToJoules(5.0))
	}
	if !cmp.Equal(Btu.ToJoules(912.9), 963164.274, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 963164.274, Btu.ToJoules(912.9))
	}
	if !cmp.Equal(Btu.ToJoules(109.0), 115001.54, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 115001.54, Btu.ToJoules(109.0))
	}
}

func TestConvertKnownBtuToCalories(t *testing.T) {
	if !cmp.Equal(Btu.ToCalories(56.0), 14121.20644042079, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 14121.20644042079, Btu.ToCalories(56.0))
	}
	if !cmp.Equal(Btu.ToCalories(123.0), 31016.221288781402, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 31016.221288781402, Btu.ToCalories(123.0))
	}
	if !cmp.Equal(Btu.ToCalories(0.9), 226.9476, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 226.9476, Btu.ToCalories(0.9))
	}
}

func TestConvertKnownBtuToUSTherms(t *testing.T) {
	if !cmp.Equal(Btu.ToUSTherms(12000.0), 0.120028657, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.120028657, Btu.ToUSTherms(12000.0))
	}
	if !cmp.Equal(Btu.ToUSTherms(9876.5), 0.098788586, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.098788586, Btu.ToUSTherms(9876.5))
	}
	if !cmp.Equal(Btu.ToUSTherms(666.999), 0.006671583, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.006671583, Btu.ToUSTherms(666.999))
	}
}

func TestConvertKnownBtuToWattHours(t *testing.T) {
	if !cmp.Equal(Btu.ToWattHours(900.0), 263.764, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 263.764, Btu.ToWattHours(900.0))
	}
	if !cmp.Equal(Btu.ToWattHours(125.7), 36.839034, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 36.839034, Btu.ToWattHours(125.7))
	}
	if !cmp.Equal(Btu.ToWattHours(0.99), 0.2901404, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.2901404, Btu.ToWattHours(0.99))
	}
}

func TestConvertKnownBtuToKilowattHours(t *testing.T) {
	if !cmp.Equal(Btu.ToKilowattHours(9000.0), 2.63764, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.63764, Btu.ToKilowattHours(9000.0))
	}
	if !cmp.Equal(Btu.ToKilowattHours(12345.0), 3.6179624, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.6179624, Btu.ToKilowattHours(12345.0))
	}
	if !cmp.Equal(Btu.ToKilowattHours(8090.8), 2.37117941, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.37117941, Btu.ToKilowattHours(8090.8))
	}
}

func TestConvertKnownBtuToFootPounds(t *testing.T) {
	if !cmp.Equal(Btu.ToFootPounds(189.0), 147073.9409, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 147073.9409, Btu.ToFootPounds(189.0))
	}
	if !cmp.Equal(Btu.ToFootPounds(0.3), 233.451, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 233.451, Btu.ToFootPounds(0.3))
	}
	if !cmp.Equal(Btu.ToFootPounds(2.6), 2023.24, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2023.24, Btu.ToFootPounds(2.6))
	}
}

func TestConvertKnownBtuToElectronvolts(t *testing.T) {
	if !cmp.Equal(Btu.ToElectronvolts(0.0000000789), 519567655294184.88, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 519567655294184.88, Btu.ToElectronvolts(0.0000000789))
	}
	if !cmp.Equal(Btu.ToElectronvolts(0.000001002), 6598311667994592.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6598311667994592.0, Btu.ToElectronvolts(0.000001002))
	}
	if !cmp.Equal(Btu.ToElectronvolts(0.000000001), 6585141385224.14, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6585141385224.14, Btu.ToElectronvolts(0.000000001))
	}
}

func TestConvertKnownCaloriesToKilojoules(t *testing.T) {
	if !cmp.Equal(Calories.ToKilojoules(109.0), 0.456056, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.456056, Calories.ToKilojoules(109.0))
	}
	if !cmp.Equal(Calories.ToKilojoules(12.3), 0.0514632, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0514632, Calories.ToKilojoules(12.3))
	}
	if !cmp.Equal(Calories.ToKilojoules(9876.0), 41.32118, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 41.32118, Calories.ToKilojoules(9876.0))
	}
}

func TestConvertKnownCaloriesToKilocalories(t *testing.T) {
	if !cmp.Equal(Calories.ToKilocalories(900.0), 0.9, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.9, Calories.ToKilocalories(900.0))
	}
	if !cmp.Equal(Calories.ToKilocalories(1782.0), 1.782, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.782, Calories.ToKilocalories(1782.0))
	}
	if !cmp.Equal(Calories.ToKilocalories(900800.0), 900.8, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 900.8, Calories.ToKilocalories(900800.0))
	}
}

func TestConvertKnownCaloriesToJoules(t *testing.T) {
	if !cmp.Equal(Calories.ToJoules(98.0), 410.032, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 410.032, Calories.ToJoules(98.0))
	}
	if !cmp.Equal(Calories.ToJoules(1.67), 6.98728, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6.98728, Calories.ToJoules(1.67))
	}
	if !cmp.Equal(Calories.ToJoules(55.0), 230.12, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 230.12, Calories.ToJoules(55.0))
	}
}

func TestConvertKnownCaloriesToBtu(t *testing.T) {
	if !cmp.Equal(Calories.ToBtu(550.0), 2.18112, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.18112, Calories.ToBtu(550.0))
	}
	if !cmp.Equal(Calories.ToBtu(1234.0), 4.893633, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.893633, Calories.ToBtu(1234.0))
	}
	if !cmp.Equal(Calories.ToBtu(900.9), 3.5726692, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.5726692, Calories.ToBtu(900.9))
	}
}

func TestConvertKnownCaloriesToUSTherms(t *testing.T) {
	if !cmp.Equal(Calories.ToUSTherms(9000000.0), 0.356995242, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.356995242, Calories.ToUSTherms(9000000.0))
	}
	if !cmp.Equal(Calories.ToUSTherms(12e6), 0.475993657, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.475993657, Calories.ToUSTherms(12e6))
	}
	if !cmp.Equal(Calories.ToUSTherms(100200300.0), 3.974558932, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.974558932, Calories.ToUSTherms(100200300.0))
	}
}

func TestConvertKnownCaloriesToWattHours(t *testing.T) {
	if !cmp.Equal(Calories.ToWattHours(600.0), 0.697333, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.697333, Calories.ToWattHours(600.0))
	}
	if !cmp.Equal(Calories.ToWattHours(1234.5), 1.43476333, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.43476333, Calories.ToWattHours(1234.5))
	}
	if !cmp.Equal(Calories.ToWattHours(88.7), 0.1030891, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.1030891, Calories.ToWattHours(88.7))
	}
}

func TestConvertKnownCaloriesToKilowattHours(t *testing.T) {
	if !cmp.Equal(Calories.ToKilowattHours(100900.0), 0.117268222, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.117268222, Calories.ToKilowattHours(100900.0))
	}
	if !cmp.Equal(Calories.ToKilowattHours(987654.0), 1.14787343, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.14787343, Calories.ToKilowattHours(987654.0))
	}
	if !cmp.Equal(Calories.ToKilowattHours(506012.0), 0.588098391, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.588098391, Calories.ToKilowattHours(506012.0))
	}
}

func TestConvertKnownCaloriesToFootPounds(t *testing.T) {
	if !cmp.Equal(Calories.ToFootPounds(123.0), 379.573, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 379.573, Calories.ToFootPounds(123.0))
	}
	if !cmp.Equal(Calories.ToFootPounds(9.01), 27.8045, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 27.8045, Calories.ToFootPounds(9.01))
	}
	if !cmp.Equal(Calories.ToFootPounds(2.8), 8.64069, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 8.64069, Calories.ToFootPounds(2.8))
	}
}

func TestConvertKnownCaloriesToElectronvolts(t *testing.T) {
	if !cmp.Equal(Calories.ToElectronvolts(0.0000091), 237800626261534.66, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 237800626261534.66, Calories.ToElectronvolts(0.0000091))
	}
	if !cmp.Equal(Calories.ToElectronvolts(0.0008), 20905549561453600.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 20905549561453600.0, Calories.ToElectronvolts(0.0008))
	}
	if !cmp.Equal(Calories.ToElectronvolts(0.00123), 32142282450734908.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 32142282450734908.0, Calories.ToElectronvolts(0.00123))
	}
}

func TestConvertKnownElectronvoltsToKilojoules(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToKilojoules(123456789.0), 1.9779957413e-14, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.9779957413e-14, Electronvolts.ToKilojoules(123456789.0))
	}
	if !cmp.Equal(Electronvolts.ToKilojoules(900900900.0), 1.4434023094e-13, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.4434023094e-13, Electronvolts.ToKilojoules(900900900.0))
	}
	if !cmp.Equal(Electronvolts.ToKilojoules(123456789123456789.0), 1.977995743237493669e-5, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.977995743237493669e-5, Electronvolts.ToKilojoules(123456789123456789.0))
	}
}

func TestConvertKnownElectronvoltsToKilocalories(t *testing.T) {
	// if !cmp.Equal(Electronvolts.ToKilocalories(100200300400.0), 1.6053857310684e-11, withinTolerance()) {
	//     t.Fatalf("Expected %f, was %f", 1.6053857310684e-11, Electronvolts.ToKilocalories(100200300400.0));
	// }
	// if !cmp.Equal(Electronvolts.ToKilocalories(123456789.0), 1.9779957413e-14, withinTolerance()) {
	// 	t.Fatalf("Expected %f, was %f", 1.9779957413e-14, Electronvolts.ToKilocalories(123456789.0))
	// }
	// if !cmp.Equal(Electronvolts.ToKilocalories(900800700600.0), 1.4432417722369e-10, withinTolerance()) {
	// 	t.Fatalf("Expected %f, was %f", 1.4432417722369e-10, Electronvolts.ToKilocalories(900800700600.0))
	// }
}

func TestConvertKnownElectronvoltsToJoules(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToJoules(123456789123.0), 1.9779957432302e-8, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.9779957432302e-8, Electronvolts.ToJoules(123456789123.0))
	}
	if !cmp.Equal(Electronvolts.ToJoules(900800700600.0), 1.4432417722369e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.4432417722369e-7, Electronvolts.ToJoules(900800700600.0))
	}
	if !cmp.Equal(Electronvolts.ToJoules(999888777666.0), 1.601998367183e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.601998367183e-7, Electronvolts.ToJoules(999888777666.0))
	}
}

func TestConvertKnownElectronvoltsToBtu(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToBtu(100020003000100020003000.0), 15.188741377060267723, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 15.188741377060267723, Electronvolts.ToBtu(100020003000100020003000.0))
	}
	if !cmp.Equal(Electronvolts.ToBtu(999888777666999888777666.0), 151.84014791315084381, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 151.84014791315084381, Electronvolts.ToBtu(999888777666999888777666.0))
	}
	if !cmp.Equal(Electronvolts.ToBtu(12345678912341234567891234.0), 1874.7782293466862029, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1874.7782293466862029, Electronvolts.ToBtu(12345678912341234567891234.0))
	}
}

func TestConvertKnownElectronvoltsToCalories(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToCalories(666333111999.0), 2.5515853167503e-8, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.5515853167503e-8, Electronvolts.ToCalories(666333111999.0))
	}
	if !cmp.Equal(Electronvolts.ToCalories(999888777666555.0), 3.8288679904011702e-5, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.8288679904011702e-5, Electronvolts.ToCalories(999888777666555.0))
	}
	if !cmp.Equal(Electronvolts.ToCalories(12345678901234.0), 4.727523282641506e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.727523282641506e-7, Electronvolts.ToCalories(12345678901234.0))
	}
}

func TestConvertKnownElectronvoltsToUSTherms(t *testing.T) {
	// if !cmp.Equal(Electronvolts.ToUSTherms(666333111999.0), 1.0118737258101e-10, withinTolerance()) {
	//     t.Fatalf("Expected %f, was %f", 1.0118737258101e-10, Electronvolts.ToUSTherms(666333111999.0));
	// }
	// if !cmp.Equal(Electronvolts.ToUSTherms(999888777666555.0), 1.5184014791308327e-7, withinTolerance()) {
	// 	t.Fatalf("Expected %f, was %f", 1.5184014791308327e-7, Electronvolts.ToUSTherms(999888777666555.0))
	// }
	// if !cmp.Equal(Electronvolts.ToUSTherms(12345678901234.0), 1.874778227659974e-9, withinTolerance()) {
	// 	t.Fatalf("Expected %f, was %f", 1.874778227659974e-9, Electronvolts.ToUSTherms(12345678901234.0))
	// }
}

func TestConvertKnownElectronvoltsToWattHours(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToWattHours(100900700100.0), 4.490576030342e-12, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.490576030342e-12, Electronvolts.ToWattHours(100900700100.0))
	}
	if !cmp.Equal(Electronvolts.ToWattHours(9000800070006000.0), 4.00579748289276988e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.00579748289276988e-7, Electronvolts.ToWattHours(9000800070006000.0))
	}
	if !cmp.Equal(Electronvolts.ToWattHours(12345678987654321.0), 5.494432653620188248e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 5.494432653620188248e-7, Electronvolts.ToWattHours(12345678987654321.0))
	}
}

func TestConvertKnownElectronvoltsToKilowattHours(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToKilowattHours(100900700100.0), 4.490576030342e-15, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.490576030342e-15, Electronvolts.ToKilowattHours(100900700100.0))
	}
	if !cmp.Equal(Electronvolts.ToKilowattHours(999988887777.0), 4.4504410034909e-14, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.4504410034909e-14, Electronvolts.ToKilowattHours(999988887777.0))
	}
	if !cmp.Equal(Electronvolts.ToKilowattHours(12345678987654321.0), 5.494432653620187834e-10, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 5.494432653620187834e-10, Electronvolts.ToKilowattHours(12345678987654321.0))
	}
}

func TestConvertKnownElectronvoltsToFootPounds(t *testing.T) {
	if !cmp.Equal(Electronvolts.ToFootPounds(100900700100.0), 1.1923484070355e-8, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.1923484070355e-8, Electronvolts.ToFootPounds(100900700100.0))
	}
	if !cmp.Equal(Electronvolts.ToFootPounds(999988887777.0), 1.1816916594359e-7, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.1816916594359e-7, Electronvolts.ToFootPounds(999988887777.0))
	}
	if !cmp.Equal(Electronvolts.ToFootPounds(12345678987654321.0), 0.0014588948005427860004, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0014588948005427860004, Electronvolts.ToFootPounds(12345678987654321.0))
	}
}

func TestConvertKnownFootPoundsToKilojoules(t *testing.T) {
	if !cmp.Equal(FootPounds.ToKilojoules(190.0), 0.257605, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.257605, FootPounds.ToKilojoules(190.0))
	}
	if !cmp.Equal(FootPounds.ToKilojoules(4.6), 0.00623676, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.00623676, FootPounds.ToKilojoules(4.6))
	}
	if !cmp.Equal(FootPounds.ToKilojoules(123.8), 0.16785026, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.16785026, FootPounds.ToKilojoules(123.8))
	}
}

func TestConvertKnownFootPoundsToKilocalories(t *testing.T) {
	if !cmp.Equal(FootPounds.ToKilocalories(1999.0), 0.6477725, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.6477725, FootPounds.ToKilocalories(1999.0))
	}
	if !cmp.Equal(FootPounds.ToKilocalories(890.8), 0.2886622, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.2886622, FootPounds.ToKilocalories(890.8))
	}
	if !cmp.Equal(FootPounds.ToKilocalories(12000.0), 3.8885792, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.8885792, FootPounds.ToKilocalories(12000.0))
	}
}

func TestConvertKnownFootPoundsToJoules(t *testing.T) {
	if !cmp.Equal(FootPounds.ToJoules(190.0), 257.605, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 257.605, FootPounds.ToJoules(190.0))
	}
	if !cmp.Equal(FootPounds.ToJoules(23.4), 31.72614, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 31.72614, FootPounds.ToJoules(23.4))
	}
	if !cmp.Equal(FootPounds.ToJoules(9.2), 12.4735, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 12.4735, FootPounds.ToJoules(9.2))
	}
}

func TestConvertKnownFootPoundsToBtu(t *testing.T) {
	if !cmp.Equal(FootPounds.ToBtu(9000.0), 11.56561, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 11.56561, FootPounds.ToBtu(9000.0))
	}
	if !cmp.Equal(FootPounds.ToBtu(45.6), 0.05859908, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.05859908, FootPounds.ToBtu(45.6))
	}
	if !cmp.Equal(FootPounds.ToBtu(1996.0), 2.564995, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.564995, FootPounds.ToBtu(1996.0))
	}
}

func TestConvertKnownFootPoundsToCalories(t *testing.T) {
	if !cmp.Equal(FootPounds.ToCalories(123.0), 39.8579, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 39.8579, FootPounds.ToCalories(123.0))
	}
	if !cmp.Equal(FootPounds.ToCalories(54.7), 17.72544, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 17.72544, FootPounds.ToCalories(54.7))
	}
	if !cmp.Equal(FootPounds.ToCalories(109.2), 35.386071, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 35.386071, FootPounds.ToCalories(109.2))
	}
}

func TestConvertKnownFootPoundsToUSTherms(t *testing.T) {
	if !cmp.Equal(FootPounds.ToUSTherms(19000000.0), 0.24422111613, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.24422111613, FootPounds.ToUSTherms(19000000.0))
	}
	if !cmp.Equal(FootPounds.ToUSTherms(1234567.0), 0.01586880688, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.01586880688, FootPounds.ToUSTherms(1234567.0))
	}
	if !cmp.Equal(FootPounds.ToUSTherms(100200300.0), 1.28794890016, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.28794890016, FootPounds.ToUSTherms(100200300.0))
	}
}

func TestConvertKnownFootPoundsToWattHours(t *testing.T) {
	if !cmp.Equal(FootPounds.ToWattHours(44.0), 0.0165711, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0165711, FootPounds.ToWattHours(44.0))
	}
	if !cmp.Equal(FootPounds.ToWattHours(9080.0), 3.419674, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.419674, FootPounds.ToWattHours(9080.0))
	}
	if !cmp.Equal(FootPounds.ToWattHours(1200.0), 0.4519393, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.4519393, FootPounds.ToWattHours(1200.0))
	}
}

func TestConvertKnownFootPoundsToKilowattHours(t *testing.T) {
	if !cmp.Equal(FootPounds.ToKilowattHours(900000.0), 0.338954487, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.338954487, FootPounds.ToKilowattHours(900000.0))
	}
	if !cmp.Equal(FootPounds.ToKilowattHours(100200.0), 0.0377369329, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0377369329, FootPounds.ToKilowattHours(100200.0))
	}
	if !cmp.Equal(FootPounds.ToKilowattHours(9876543.0), 3.719665074, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.719665074, FootPounds.ToKilowattHours(9876543.0))
	}
}

func TestConvertKnownFootPoundsToElectronvolts(t *testing.T) {
	if !cmp.Equal(FootPounds.ToElectronvolts(0.00123), 10408691651641586.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 10408691651641586.0, FootPounds.ToElectronvolts(0.00123))
	}
	if !cmp.Equal(FootPounds.ToElectronvolts(0.0009), 7616115842664575.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7616115842664575.0, FootPounds.ToElectronvolts(0.0009))
	}
	if !cmp.Equal(FootPounds.ToElectronvolts(0.00000888), 75145676314290.469, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 75145676314290.469, FootPounds.ToElectronvolts(0.00000888))
	}
}

func TestConvertKnownJoulesToKilojoules(t *testing.T) {
	if !cmp.Equal(Joules.ToKilojoules(790.0), 0.79, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.79, Joules.ToKilojoules(790.0))
	}
	if !cmp.Equal(Joules.ToKilojoules(800100.0), 800.1, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 800.1, Joules.ToKilojoules(800100.0))
	}
	if !cmp.Equal(Joules.ToKilojoules(509.2), 0.5092, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.5092, Joules.ToKilojoules(509.2))
	}
}

func TestConvertKnownJoulesToKilocalories(t *testing.T) {
	if !cmp.Equal(Joules.ToKilocalories(790.0), 0.188815, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.188815, Joules.ToKilocalories(790.0))
	}
	if !cmp.Equal(Joules.ToKilocalories(125.9), 0.030090822, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.030090822, Joules.ToKilocalories(125.9))
	}
	if !cmp.Equal(Joules.ToKilocalories(8000.0), 1.912046, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.912046, Joules.ToKilocalories(8000.0))
	}
}

func TestConvertKnownJoulesToBtu(t *testing.T) {
	if !cmp.Equal(Joules.ToBtu(500.0), 0.473909, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.473909, Joules.ToBtu(500.0))
	}
	if !cmp.Equal(Joules.ToBtu(1910.0), 1.810331, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.810331, Joules.ToBtu(1910.0))
	}
	if !cmp.Equal(Joules.ToBtu(67000.1), 63.50384184, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 63.50384184, Joules.ToBtu(67000.1))
	}
}

func TestConvertKnownJoulesToCalories(t *testing.T) {
	if !cmp.Equal(Joules.ToCalories(67.0), 16.0134, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 16.0134, Joules.ToCalories(67.0))
	}
	if !cmp.Equal(Joules.ToCalories(909.0), 217.256, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 217.256, Joules.ToCalories(909.0))
	}
	if !cmp.Equal(Joules.ToCalories(190.0), 45.4111, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 45.4111, Joules.ToCalories(190.0))
	}
}

func TestConvertKnownJoulesToUSTherms(t *testing.T) {
	if !cmp.Equal(Joules.ToUSTherms(100090000.0), 0.948896667059, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.948896667059, Joules.ToUSTherms(100090000.0))
	}
	if !cmp.Equal(Joules.ToUSTherms(55.7e6), 0.52806018938, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.52806018938, Joules.ToUSTherms(55.7e6))
	}
	if !cmp.Equal(Joules.ToUSTherms(1234567890.0), 11.70423974501, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 11.70423974501, Joules.ToUSTherms(1234567890.0))
	}
}

func TestConvertKnownJoulesToWattHours(t *testing.T) {
	if !cmp.Equal(Joules.ToWattHours(56000.0), 15.555556, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 15.555556, Joules.ToWattHours(56000.0))
	}
	if !cmp.Equal(Joules.ToWattHours(890.0), 0.247222, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.247222, Joules.ToWattHours(890.0))
	}
	if !cmp.Equal(Joules.ToWattHours(22001.0), 6.1113889, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6.1113889, Joules.ToWattHours(22001.0))
	}
}

func TestConvertKnownJoulesToKilowattHours(t *testing.T) {
	if !cmp.Equal(Joules.ToKilowattHours(560000.8), 0.1555557, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.1555557, Joules.ToKilowattHours(560000.8))
	}
	if !cmp.Equal(Joules.ToKilowattHours(1234567.0), 0.3429352778, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.3429352778, Joules.ToKilowattHours(1234567.0))
	}
	if !cmp.Equal(Joules.ToKilowattHours(900100.0), 0.250027778, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.250027778, Joules.ToKilowattHours(900100.0))
	}
}

func TestConvertKnownJoulesToFootPounds(t *testing.T) {
	if !cmp.Equal(Joules.ToFootPounds(900.0), 663.806, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 663.806, Joules.ToFootPounds(900.0))
	}
	if !cmp.Equal(Joules.ToFootPounds(10.2), 7.523134, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7.523134, Joules.ToFootPounds(10.2))
	}
	if !cmp.Equal(Joules.ToFootPounds(6.7), 4.94167, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4.94167, Joules.ToFootPounds(6.7))
	}
}

func TestConvertKnownJoulesToElectronvolts(t *testing.T) {
	if !cmp.Equal(Joules.ToElectronvolts(0.00000888), 55424602968504.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 55424602968504.0, Joules.ToElectronvolts(0.00000888))
	}
	if !cmp.Equal(Joules.ToElectronvolts(0.00001234), 77020225296322.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 77020225296322.0, Joules.ToElectronvolts(0.00001234))
	}
	if !cmp.Equal(Joules.ToElectronvolts(0.00000666), 41568452226378.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 41568452226378.0, Joules.ToElectronvolts(0.00000666))
	}
}

func TestConvertKnownKilocaloriesToKilojoules(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToKilojoules(67.0), 280.328, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 280.328, Kilocalories.ToKilojoules(67.0))
	}
	if !cmp.Equal(Kilocalories.ToKilojoules(4.5), 18.828, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 18.828, Kilocalories.ToKilojoules(4.5))
	}
	if !cmp.Equal(Kilocalories.ToKilojoules(100.3), 419.6552, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 419.6552, Kilocalories.ToKilojoules(100.3))
	}
}

func TestConvertKnownKilocaloriesToJoules(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToJoules(100.3), 419655.2, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 419655.2, Kilocalories.ToJoules(100.3))
	}
	if !cmp.Equal(Kilocalories.ToJoules(0.9), 3765.6, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3765.6, Kilocalories.ToJoules(0.9))
	}
	if !cmp.Equal(Kilocalories.ToJoules(3.4), 14225.6, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 14225.6, Kilocalories.ToJoules(3.4))
	}
}

func TestConvertKnownKilocaloriesToBtu(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToBtu(3.4), 13.4833, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 13.4833, Kilocalories.ToBtu(3.4))
	}
	if !cmp.Equal(Kilocalories.ToBtu(109.0), 432.2576846216055, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 432.2576846216055, Kilocalories.ToBtu(109.0))
	}
	if !cmp.Equal(Kilocalories.ToBtu(22.89), 90.77411377053717, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 90.77411377053717, Kilocalories.ToBtu(22.89))
	}
}

func TestConvertKnownKilocaloriesToCalories(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToCalories(22.8), 22800.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 22800.0, Kilocalories.ToCalories(22.8))
	}
	if !cmp.Equal(Kilocalories.ToCalories(76.23), 76230.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 76230.0, Kilocalories.ToCalories(76.23))
	}
	if !cmp.Equal(Kilocalories.ToCalories(0.07), 70.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 70.0, Kilocalories.ToCalories(0.07))
	}
}

func TestConvertKnownKilocaloriesToUSTherms(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToUSTherms(12345.0), 0.4896388, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.4896388, Kilocalories.ToUSTherms(12345.0))
	}
	if !cmp.Equal(Kilocalories.ToUSTherms(90002.0), 3.5700317, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.5700317, Kilocalories.ToUSTherms(90002.0))
	}
	if !cmp.Equal(Kilocalories.ToUSTherms(180180.0), 7.14704457, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7.14704457, Kilocalories.ToUSTherms(180180.0))
	}
}

func TestConvertKnownKilocaloriesToWattHours(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToWattHours(89.0), 103.438, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 103.438, Kilocalories.ToWattHours(89.0))
	}
	if !cmp.Equal(Kilocalories.ToWattHours(23.6), 27.42844, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 27.42844, Kilocalories.ToWattHours(23.6))
	}
	if !cmp.Equal(Kilocalories.ToWattHours(0.9), 1.046, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.046, Kilocalories.ToWattHours(0.9))
	}
}

func TestConvertKnownKilocaloriesToKilowattHours(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToKilowattHours(456.0), 0.529973, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.529973, Kilocalories.ToKilowattHours(456.0))
	}
	if !cmp.Equal(Kilocalories.ToKilowattHours(1090.8), 1.267752, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.267752, Kilocalories.ToKilowattHours(1090.8))
	}
	if !cmp.Equal(Kilocalories.ToKilowattHours(567.1), 0.65909622, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.65909622, Kilocalories.ToKilowattHours(567.1))
	}
}

func TestConvertKnownKilocaloriesToFootPounds(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToFootPounds(109.0), 336369.64, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 336369.64, Kilocalories.ToFootPounds(109.0))
	}
	if !cmp.Equal(Kilocalories.ToFootPounds(0.5), 1542.98, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1542.98, Kilocalories.ToFootPounds(0.5))
	}
	if !cmp.Equal(Kilocalories.ToFootPounds(2.4), 7406.3, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7406.3, Kilocalories.ToFootPounds(2.4))
	}
}

func TestConvertKnownKilocaloriesToElectronvolts(t *testing.T) {
	if !cmp.Equal(Kilocalories.ToElectronvolts(0.0000000666), 1740388069688132.2, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1740388069688132.2, Kilocalories.ToElectronvolts(0.0000000666))
	}
	if !cmp.Equal(Kilocalories.ToElectronvolts(0.000002), 52263905996640608.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 52263905996640608.0, Kilocalories.ToElectronvolts(0.000002))
	}
	if !cmp.Equal(Kilocalories.ToElectronvolts(0.000000999), 26105821045321988.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 26105821045321988.0, Kilocalories.ToElectronvolts(0.000000999))
	}
}

func TestConvertKnownKilojoulesToKilocalories(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToKilocalories(199.0), 47.5621, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 47.5621, Kilojoules.ToKilocalories(199.0))
	}
	if !cmp.Equal(Kilojoules.ToKilocalories(0.67), 0.1601338, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.1601338, Kilojoules.ToKilocalories(0.67))
	}
	if !cmp.Equal(Kilojoules.ToKilocalories(4.7), 1.12333, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.12333, Kilojoules.ToKilocalories(4.7))
	}
}

func TestConvertKnownKilojoulesToJoules(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToJoules(4.7), 4700.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 4700.0, Kilojoules.ToJoules(4.7))
	}
	if !cmp.Equal(Kilojoules.ToJoules(7.8), 7800.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7800.0, Kilojoules.ToJoules(7.8))
	}
	if !cmp.Equal(Kilojoules.ToJoules(1800.0), 1800000.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1800000.0, Kilojoules.ToJoules(1800.0))
	}
}

func TestConvertKnownKilojoulesToBtu(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToBtu(1800.0), 1706.070, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1706.070, Kilojoules.ToBtu(1800.0))
	}
	if !cmp.Equal(Kilojoules.ToBtu(1.4), 1.32694, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.32694, Kilojoules.ToBtu(1.4))
	}
	if !cmp.Equal(Kilojoules.ToBtu(89.2), 84.54529, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 84.54529, Kilojoules.ToBtu(89.2))
	}
}

func TestConvertKnownKilojoulesToCalories(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToCalories(67.0), 16013.381899, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 16013.381899, Kilojoules.ToCalories(67.0))
	}
	if !cmp.Equal(Kilojoules.ToCalories(1.4), 334.608, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 334.608, Kilojoules.ToCalories(1.4))
	}
	if !cmp.Equal(Kilojoules.ToCalories(87.0), 20793.5, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 20793.5, Kilojoules.ToCalories(87.0))
	}
}

func TestConvertKnownKilojoulesToUSTherms(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToUSTherms(123456.0), 1.17041649, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.17041649, Kilojoules.ToUSTherms(123456.0))
	}
	if !cmp.Equal(Kilojoules.ToUSTherms(88000.0), 0.83427822, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.83427822, Kilojoules.ToUSTherms(88000.0))
	}
	if !cmp.Equal(Kilojoules.ToUSTherms(9000.0), 0.08532391, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.08532391, Kilojoules.ToUSTherms(9000.0))
	}
}

func TestConvertKnownKilojoulesToWattHours(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToWattHours(98000.0), 27222.222, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 27222.222, Kilojoules.ToWattHours(98000.0))
	}
	if !cmp.Equal(Kilojoules.ToWattHours(1.5), 0.416667, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.416667, Kilojoules.ToWattHours(1.5))
	}
	if !cmp.Equal(Kilojoules.ToWattHours(67.9), 18.86111, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 18.86111, Kilojoules.ToWattHours(67.9))
	}
}

func TestConvertKnownKilojoulesToKilowattHours(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToKilowattHours(8000.0), 2.222222, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.222222, Kilojoules.ToKilowattHours(8000.0))
	}
	if !cmp.Equal(Kilojoules.ToKilowattHours(67.99), 0.018886111, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.018886111, Kilojoules.ToKilowattHours(67.99))
	}
	if !cmp.Equal(Kilojoules.ToKilowattHours(406.8), 0.113, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.113, Kilojoules.ToKilowattHours(406.8))
	}
}

func TestConvertKnownKilojoulesToFootPounds(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToFootPounds(100.9), 74420.00579, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 74420.00579, Kilojoules.ToFootPounds(100.9))
	}
	if !cmp.Equal(Kilojoules.ToFootPounds(2.4), 1770.15, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1770.15, Kilojoules.ToFootPounds(2.4))
	}
	if !cmp.Equal(Kilojoules.ToFootPounds(0.9), 663.806, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 663.806, Kilojoules.ToFootPounds(0.9))
	}
}

func TestConvertKnownKilojoulesToElectronvolts(t *testing.T) {
	if !cmp.Equal(Kilojoules.ToElectronvolts(0.000000999), 6235268234766989.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6235268234766989.0, Kilojoules.ToElectronvolts(0.000000999))
	}
	if !cmp.Equal(Kilojoules.ToElectronvolts(0.0000002), 1248301948902300.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1248301948902300.0, Kilojoules.ToElectronvolts(0.0000002))
	}
	if !cmp.Equal(Kilojoules.ToElectronvolts(0.00567), 3.5389360251380204e+19, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.5389360251380204e+19, Kilojoules.ToElectronvolts(0.00567))
	}
}

func TestConvertKnownKilowattHoursToKilojoules(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToKilojoules(0.6), 2160.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2160.0, KilowattHours.ToKilojoules(0.6))
	}
	if !cmp.Equal(KilowattHours.ToKilojoules(134.0), 482400.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 482400.0, KilowattHours.ToKilojoules(134.0))
	}
	if !cmp.Equal(KilowattHours.ToKilojoules(45.6), 164160.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 164160.0, KilowattHours.ToKilojoules(45.6))
	}
}

func TestConvertKnownKilowattHoursToKilocalories(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToKilocalories(45.6), 39235.1976, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 39235.1976, KilowattHours.ToKilocalories(45.6))
	}
	if !cmp.Equal(KilowattHours.ToKilocalories(12.0), 10325.052, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 10325.052, KilowattHours.ToKilocalories(12.0))
	}
	if !cmp.Equal(KilowattHours.ToKilocalories(0.4), 344.168, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 344.168, KilowattHours.ToKilocalories(0.4))
	}
}

func TestConvertKnownKilowattHoursToJoules(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToJoules(0.01), 36000.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 36000.0, KilowattHours.ToJoules(0.01))
	}
	if !cmp.Equal(KilowattHours.ToJoules(0.009), 32400.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 32400.0, KilowattHours.ToJoules(0.009))
	}
	if !cmp.Equal(KilowattHours.ToJoules(2.0), 7.2e+6, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7.2e+6, KilowattHours.ToJoules(2.0))
	}
}

func TestConvertKnownKilowattHoursToBtu(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToBtu(2.0), 6824.28, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6824.28, KilowattHours.ToBtu(2.0))
	}
	if !cmp.Equal(KilowattHours.ToBtu(0.7), 2388.4979, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2388.4979, KilowattHours.ToBtu(0.7))
	}
	if !cmp.Equal(KilowattHours.ToBtu(0.02), 68.24283, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 68.24283, KilowattHours.ToBtu(0.02))
	}
}

func TestConvertKnownKilowattHoursToCalories(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToCalories(0.1), 86042.1, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 86042.1, KilowattHours.ToCalories(0.1))
	}
	if !cmp.Equal(KilowattHours.ToCalories(0.07), 60229.47, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 60229.47, KilowattHours.ToCalories(0.07))
	}
	if !cmp.Equal(KilowattHours.ToCalories(0.0123), 10583.174, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 10583.174, KilowattHours.ToCalories(0.0123))
	}
}

func TestConvertKnownKilowattHoursToUSTherms(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToUSTherms(5.0), 0.170648, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.170648, KilowattHours.ToUSTherms(5.0))
	}
	if !cmp.Equal(KilowattHours.ToUSTherms(234.0), 7.98632, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 7.98632, KilowattHours.ToUSTherms(234.0))
	}
	if !cmp.Equal(KilowattHours.ToUSTherms(1001.0), 34.16369, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 34.16369, KilowattHours.ToUSTherms(1001.0))
	}
}

func TestConvertKnownKilowattHoursToWattHours(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToWattHours(123.0), 123000.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 123000.0, KilowattHours.ToWattHours(123.0))
	}
	if !cmp.Equal(KilowattHours.ToWattHours(98.4), 98400.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 98400.0, KilowattHours.ToWattHours(98.4))
	}
	if !cmp.Equal(KilowattHours.ToWattHours(1.6), 1600.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1600.0, KilowattHours.ToWattHours(1.6))
	}
}

func TestConvertKnownKilowattHoursToFootPounds(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToFootPounds(0.001), 2655.196219, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2655.196219, KilowattHours.ToFootPounds(0.001))
	}
	if !cmp.Equal(KilowattHours.ToFootPounds(0.09), 238967.6597, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 238967.6597, KilowattHours.ToFootPounds(0.09))
	}
	if !cmp.Equal(KilowattHours.ToFootPounds(0.0006), 1593.1177314, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1593.1177314, KilowattHours.ToFootPounds(0.0006))
	}
}

func TestConvertKnownKilowattHoursToElectronvolts(t *testing.T) {
	if !cmp.Equal(KilowattHours.ToElectronvolts(0.000008), 179755440000000000000.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 179755440000000000000.0, KilowattHours.ToElectronvolts(0.000008))
	}
	if !cmp.Equal(KilowattHours.ToElectronvolts(0.0000000128), 2.8760870400000003e+17, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.8760870400000003e+17, KilowattHours.ToElectronvolts(0.0000000128))
	}
	if !cmp.Equal(KilowattHours.ToElectronvolts(0.0000000001), 2246943000000000.2, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2246943000000000.2, KilowattHours.ToElectronvolts(0.0000000001))
	}
}

func TestConvertKnownUSThermsToKilojoules(t *testing.T) {
	if !cmp.Equal(USTherms.ToKilojoules(0.009), 949.3236, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 949.3236, USTherms.ToKilojoules(0.009))
	}
	if !cmp.Equal(USTherms.ToKilojoules(3.0), 316440.12, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 316440.12, USTherms.ToKilojoules(3.0))
	}
	if !cmp.Equal(USTherms.ToKilojoules(1.9), 200412.075, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 200412.075, USTherms.ToKilojoules(1.9))
	}
}

func TestConvertKnownUSThermsToKilocalories(t *testing.T) {
	if !cmp.Equal(USTherms.ToKilocalories(1.1), 27731.484079398004, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 27731.484079398004, USTherms.ToKilocalories(1.1))
	}
	if !cmp.Equal(USTherms.ToKilocalories(0.04), 1008.417, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1008.417, USTherms.ToKilocalories(0.04))
	}
	if !cmp.Equal(USTherms.ToKilocalories(0.0123), 310.088174, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 310.088174, USTherms.ToKilocalories(0.0123))
	}
}

func TestConvertKnownUSThermsToJoules(t *testing.T) {
	if !cmp.Equal(USTherms.ToJoules(0.008), 843843.2, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 843843.2, USTherms.ToJoules(0.008))
	}
	if !cmp.Equal(USTherms.ToJoules(3.4e-6), 358.633, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 358.633, USTherms.ToJoules(3.4e-6))
	}
	if !cmp.Equal(USTherms.ToJoules(0.00678), 715157.112, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 715157.112, USTherms.ToJoules(0.00678))
	}
}

func TestConvertKnownUSThermsToBtu(t *testing.T) {
	if !cmp.Equal(USTherms.ToBtu(0.00666), 665.8409891, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 665.8409891, USTherms.ToBtu(0.00666))
	}
	if !cmp.Equal(USTherms.ToBtu(2.0), 199952.249, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 199952.249, USTherms.ToBtu(2.0))
	}
	if !cmp.Equal(USTherms.ToBtu(0.9), 89978.51204, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 89978.51204, USTherms.ToBtu(0.9))
	}
}

func TestConvertKnownUSThermsToCalories(t *testing.T) {
	if !cmp.Equal(USTherms.ToCalories(0.003), 75631.262, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 75631.262, USTherms.ToCalories(0.003))
	}
	if !cmp.Equal(USTherms.ToCalories(6.8e-3), 171430.856, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 171430.856, USTherms.ToCalories(6.8e-3))
	}
	if !cmp.Equal(USTherms.ToCalories(0.0008), 20168.3365, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 20168.3365, USTherms.ToCalories(0.0008))
	}
}

func TestConvertKnownUSThermsToWattHours(t *testing.T) {
	if !cmp.Equal(USTherms.ToWattHours(6.0), 175800.59, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 175800.59, USTherms.ToWattHours(6.0))
	}
	if !cmp.Equal(USTherms.ToWattHours(1.9), 55670.189, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 55670.189, USTherms.ToWattHours(1.9))
	}
	if !cmp.Equal(USTherms.ToWattHours(0.07), 2051.008, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2051.008, USTherms.ToWattHours(0.07))
	}
}

func TestConvertKnownUSThermsToKilowattHours(t *testing.T) {
	if !cmp.Equal(USTherms.ToKilowattHours(0.9), 26.3701, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 26.3701, USTherms.ToKilowattHours(0.9))
	}
	if !cmp.Equal(USTherms.ToKilowattHours(7.9), 231.471, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 231.471, USTherms.ToKilowattHours(7.9))
	}
	if !cmp.Equal(USTherms.ToKilowattHours(1.4), 41.0202, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 41.0202, USTherms.ToKilowattHours(1.4))
	}
}

func TestConvertKnownUSThermsToFootPounds(t *testing.T) {
	if !cmp.Equal(USTherms.ToFootPounds(0.009), 700352.43389267, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 700352.43389267, USTherms.ToFootPounds(0.009))
	}
	if !cmp.Equal(USTherms.ToFootPounds(0.02), 1556338.74198, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1556338.74198, USTherms.ToFootPounds(0.02))
	}
	if !cmp.Equal(USTherms.ToFootPounds(0.0003), 23345.081129, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 23345.081129, USTherms.ToFootPounds(0.0003))
	}
}

func TestConvertKnownUSThermsToElectronvolts(t *testing.T) {
	if !cmp.Equal(USTherms.ToElectronvolts(0.0000009), 592520940098199000000.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 592520940098199000000.0, USTherms.ToElectronvolts(0.0000009))
	}
	if !cmp.Equal(USTherms.ToElectronvolts(0.000000001339), 8.815394875460983e+17, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 8.815394875460983e+17, USTherms.ToElectronvolts(0.000000001339))
	}
	if !cmp.Equal(USTherms.ToElectronvolts(0.0000000000666), 43846549567266728.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 43846549567266728.0, USTherms.ToElectronvolts(0.0000000000666))
	}
}

func TestConvertKnownWattHoursToKilojoules(t *testing.T) {
	if !cmp.Equal(WattHours.ToKilojoules(1.6), 5.76, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 5.76, WattHours.ToKilojoules(1.6))
	}
	if !cmp.Equal(WattHours.ToKilojoules(67.0), 241.2, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 241.2, WattHours.ToKilojoules(67.0))
	}
	if !cmp.Equal(WattHours.ToKilojoules(8.12), 29.232, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 29.232, WattHours.ToKilojoules(8.12))
	}
}

func TestConvertKnownWattHoursToKilocalories(t *testing.T) {
	if !cmp.Equal(WattHours.ToKilocalories(8.12), 6.986616, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 6.986616, WattHours.ToKilocalories(8.12))
	}
	if !cmp.Equal(WattHours.ToKilocalories(170.0), 146.272, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 146.272, WattHours.ToKilocalories(170.0))
	}
	if !cmp.Equal(WattHours.ToKilocalories(19.2), 16.52008, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 16.52008, WattHours.ToKilocalories(19.2))
	}
}

func TestConvertKnownWattHoursToJoules(t *testing.T) {
	if !cmp.Equal(WattHours.ToJoules(6.7), 24120.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 24120.0, WattHours.ToJoules(6.7))
	}
	if !cmp.Equal(WattHours.ToJoules(12.34), 44424.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 44424.0, WattHours.ToJoules(12.34))
	}
	if !cmp.Equal(WattHours.ToJoules(0.09), 324.0, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 324.0, WattHours.ToJoules(0.09))
	}
}

func TestConvertKnownWattHoursToBtu(t *testing.T) {
	if !cmp.Equal(WattHours.ToBtu(34.0), 116.013, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 116.013, WattHours.ToBtu(34.0))
	}
	if !cmp.Equal(WattHours.ToBtu(179.2), 611.45578, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 611.45578, WattHours.ToBtu(179.2))
	}
	if !cmp.Equal(WattHours.ToBtu(0.9), 3.07093, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3.07093, WattHours.ToBtu(0.9))
	}
}

func TestConvertKnownWattHoursToCalories(t *testing.T) {
	if !cmp.Equal(WattHours.ToCalories(0.2), 172.084, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 172.084, WattHours.ToCalories(0.2))
	}
	if !cmp.Equal(WattHours.ToCalories(0.09), 77.43786, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 77.43786, WattHours.ToCalories(0.09))
	}
	if !cmp.Equal(WattHours.ToCalories(12.0), 10325.06754, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 10325.06754, WattHours.ToCalories(12.0))
	}
}

func TestConvertKnownWattHoursToUSTherms(t *testing.T) {
	if !cmp.Equal(WattHours.ToUSTherms(1090.0), 0.03720122, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.03720122, WattHours.ToUSTherms(1090.0))
	}
	if !cmp.Equal(WattHours.ToUSTherms(49990.0), 1.7061369, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1.7061369, WattHours.ToUSTherms(49990.0))
	}
	if !cmp.Equal(WattHours.ToUSTherms(900800.0), 30.7439107, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 30.7439107, WattHours.ToUSTherms(900800.0))
	}
}

func TestConvertKnownWattHoursToKilowattHours(t *testing.T) {
	if !cmp.Equal(WattHours.ToKilowattHours(98.0), 0.098, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.098, WattHours.ToKilowattHours(98.0))
	}
	if !cmp.Equal(WattHours.ToKilowattHours(12.5), 0.0125, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0125, WattHours.ToKilowattHours(12.5))
	}
	if !cmp.Equal(WattHours.ToKilowattHours(0.6), 0.0006, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 0.0006, WattHours.ToKilowattHours(0.6))
	}
}

func TestConvertKnownWattHoursToFootPounds(t *testing.T) {
	if !cmp.Equal(WattHours.ToFootPounds(1.5), 3982.829, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 3982.829, WattHours.ToFootPounds(1.5))
	}
	if !cmp.Equal(WattHours.ToFootPounds(0.3), 796.567, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 796.567, WattHours.ToFootPounds(0.3))
	}
	if !cmp.Equal(WattHours.ToFootPounds(90.1), 239235.3219, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 239235.3219, WattHours.ToFootPounds(90.1))
	}
}

func TestConvertKnownWattHoursToElectronvolts(t *testing.T) {
	if !cmp.Equal(WattHours.ToElectronvolts(0.0000000000666), 1496463565615.39, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 1496463565615.39, WattHours.ToElectronvolts(0.0000000000666))
	}
	if !cmp.Equal(WattHours.ToElectronvolts(0.000000008), 179755383257104.03, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 179755383257104.03, WattHours.ToElectronvolts(0.000000008))
	}
	if !cmp.Equal(WattHours.ToElectronvolts(0.0000123), 2.7637390175779744e+17, withinTolerance()) {
		t.Fatalf("Expected %f, was %f", 2.7637390175779744e+17, WattHours.ToElectronvolts(0.0000123))
	}
}
