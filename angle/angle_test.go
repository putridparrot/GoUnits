// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package angle

import (
	"testing"
	"math"
	"github.com/google/go-cmp/cmp"
)

func withinTolerance() cmp.Option {
	return cmp.Comparer(func(x, y float64) bool {
		delta := math.Abs(x - y)
		mean := math.Abs(x + y) / 2.0
		return delta / mean < 0.01
	})
}
func TestConvertKnownDegreesToRadians(t * testing.T) {
    if !cmp.Equal(Degrees.ToRadians(98.8), 1.724385, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.724385, Degrees.ToRadians(98.8));
    }
    if !cmp.Equal(Degrees.ToRadians(8000.0), 139.6263, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 139.6263, Degrees.ToRadians(8000.0));
    }
    if !cmp.Equal(Degrees.ToRadians(8.0), 0.139626, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.139626, Degrees.ToRadians(8.0));
    }
}

func TestConvertKnownDegreesToGradians(t * testing.T) {
    if !cmp.Equal(Degrees.ToGradians(123.0), 136.667, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 136.667, Degrees.ToGradians(123.0));
    }
    if !cmp.Equal(Degrees.ToGradians(65.0), 72.2222, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 72.2222, Degrees.ToGradians(65.0));
    }
    if !cmp.Equal(Degrees.ToGradians(900.0), 1000.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1000.0, Degrees.ToGradians(900.0));
    }
}

func TestConvertKnownDegreesToMilliradians(t * testing.T) {
    if !cmp.Equal(Degrees.ToMilliradians(900.0), 15707.969, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 15707.969, Degrees.ToMilliradians(900.0));
    }
    if !cmp.Equal(Degrees.ToMilliradians(76.0), 1326.45, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1326.45, Degrees.ToMilliradians(76.0));
    }
    if !cmp.Equal(Degrees.ToMilliradians(4.5), 78.5398, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 78.5398, Degrees.ToMilliradians(4.5));
    }
    if !cmp.Equal(Degrees.ToMilliradians(23333.11), 407239.5873, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 407239.5873, Degrees.ToMilliradians(23333.11));
    }
}

func TestConvertKnownDegreesToMinuteOfArc(t * testing.T) {
    if !cmp.Equal(Degrees.ToMinuteOfArc(97.0), 5820.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5820.0, Degrees.ToMinuteOfArc(97.0));
    }
    if !cmp.Equal(Degrees.ToMinuteOfArc(8.65), 519.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 519.0, Degrees.ToMinuteOfArc(8.65));
    }
    if !cmp.Equal(Degrees.ToMinuteOfArc(12.0), 720.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 720.0, Degrees.ToMinuteOfArc(12.0));
    }
}

func TestConvertKnownDegreesToSecondsOfArc(t * testing.T) {
    if !cmp.Equal(Degrees.ToSecondsOfArc(12.0), 43200.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 43200.0, Degrees.ToSecondsOfArc(12.0));
    }
    if !cmp.Equal(Degrees.ToSecondsOfArc(910.4), 3277440.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 3277440.0, Degrees.ToSecondsOfArc(910.4));
    }
    if !cmp.Equal(Degrees.ToSecondsOfArc(5.6), 20160.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 20160.0, Degrees.ToSecondsOfArc(5.6));
    }
}

func TestConvertKnownGradiansToDegrees(t * testing.T) {
    if !cmp.Equal(Gradians.ToDegrees(5.6), 5.04, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5.04, Gradians.ToDegrees(5.6));
    }
    if !cmp.Equal(Gradians.ToDegrees(167.0), 150.3, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 150.3, Gradians.ToDegrees(167.0));
    }
    if !cmp.Equal(Gradians.ToDegrees(0.1), 0.09, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.09, Gradians.ToDegrees(0.1));
    }
}

func TestConvertKnownGradiansToRadians(t * testing.T) {
    if !cmp.Equal(Gradians.ToRadians(67.9), 1.066571, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.066571, Gradians.ToRadians(67.9));
    }
    if !cmp.Equal(Gradians.ToRadians(8000.0), 125.6637, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 125.6637, Gradians.ToRadians(8000.0));
    }
    if !cmp.Equal(Gradians.ToRadians(6.5), 0.102102, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.102102, Gradians.ToRadians(6.5));
    }
}

func TestConvertKnownGradiansToMilliradians(t * testing.T) {
    if !cmp.Equal(Gradians.ToMilliradians(8.1), 127.2348, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 127.2348, Gradians.ToMilliradians(8.1));
    }
    if !cmp.Equal(Gradians.ToMilliradians(900.0), 14137.167, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 14137.167, Gradians.ToMilliradians(900.0));
    }
    if !cmp.Equal(Gradians.ToMilliradians(1902.5), 29884.4, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 29884.4, Gradians.ToMilliradians(1902.5));
    }
}

func TestConvertKnownGradiansToMinuteOfArc(t * testing.T) {
    if !cmp.Equal(Gradians.ToMinuteOfArc(80.9), 4368.6, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 4368.6, Gradians.ToMinuteOfArc(80.9));
    }
    if !cmp.Equal(Gradians.ToMinuteOfArc(1678.0), 90612.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 90612.0, Gradians.ToMinuteOfArc(1678.0));
    }
    if !cmp.Equal(Gradians.ToMinuteOfArc(900.0), 48600.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 48600.0, Gradians.ToMinuteOfArc(900.0));
    }
}

func TestConvertKnownGradiansToSecondsOfArc(t * testing.T) {
    if !cmp.Equal(Gradians.ToSecondsOfArc(0.9), 2916.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2916.0, Gradians.ToSecondsOfArc(0.9));
    }
    if !cmp.Equal(Gradians.ToSecondsOfArc(12.3), 39852.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 39852.0, Gradians.ToSecondsOfArc(12.3));
    }
    if !cmp.Equal(Gradians.ToSecondsOfArc(5.1), 16524.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 16524.0, Gradians.ToSecondsOfArc(5.1));
    }
}

func TestConvertKnownMilliradiansToDegrees(t * testing.T) {
    if !cmp.Equal(Milliradians.ToDegrees(5.9), 0.338045, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.338045, Milliradians.ToDegrees(5.9));
    }
    if !cmp.Equal(Milliradians.ToDegrees(109.0), 6.24524, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 6.24524, Milliradians.ToDegrees(109.0));
    }
    if !cmp.Equal(Milliradians.ToDegrees(7009.0), 401.5861, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 401.5861, Milliradians.ToDegrees(7009.0));
    }
    if !cmp.Equal(Milliradians.ToDegrees(407239.5873), 23333.11, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 23333.11, Milliradians.ToDegrees(407239.5873));
    }
}

func TestConvertKnownMilliradiansToRadians(t * testing.T) {
    if !cmp.Equal(Milliradians.ToRadians(8011.0), 8.011, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 8.011, Milliradians.ToRadians(8011.0));
    }
    if !cmp.Equal(Milliradians.ToRadians(7689.0), 7.689, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 7.689, Milliradians.ToRadians(7689.0));
    }
    if !cmp.Equal(Milliradians.ToRadians(129.0), 0.129, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.129, Milliradians.ToRadians(129.0));
    }
}

func TestConvertKnownMilliradiansToGradians(t * testing.T) {
    if !cmp.Equal(Milliradians.ToGradians(129.0), 8.2124, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 8.2124, Milliradians.ToGradians(129.0));
    }
    if !cmp.Equal(Milliradians.ToGradians(800.0), 50.9296, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 50.9296, Milliradians.ToGradians(800.0));
    }
    if !cmp.Equal(Milliradians.ToGradians(12.89), 0.8206029, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.8206029, Milliradians.ToGradians(12.89));
    }
}

func TestConvertKnownMilliradiansToMinuteOfArc(t * testing.T) {
    if !cmp.Equal(Milliradians.ToMinuteOfArc(12.0), 41.253, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 41.253, Milliradians.ToMinuteOfArc(12.0));
    }
    if !cmp.Equal(Milliradians.ToMinuteOfArc(0.9), 3.09397, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 3.09397, Milliradians.ToMinuteOfArc(0.9));
    }
    if !cmp.Equal(Milliradians.ToMinuteOfArc(800.0), 2750.2, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2750.2, Milliradians.ToMinuteOfArc(800.0));
    }
}

func TestConvertKnownMilliradiansToSecondsOfArc(t * testing.T) {
    if !cmp.Equal(Milliradians.ToSecondsOfArc(67.0), 13819.742, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 13819.742, Milliradians.ToSecondsOfArc(67.0));
    }
    if !cmp.Equal(Milliradians.ToSecondsOfArc(900.0), 185638.32562238674, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 185638.32562238674, Milliradians.ToSecondsOfArc(900.0));
    }
    if !cmp.Equal(Milliradians.ToSecondsOfArc(812.5), 167590.16, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 167590.16, Milliradians.ToSecondsOfArc(812.5));
    }
}

func TestConvertKnownMinuteOfArcToDegrees(t * testing.T) {
    if !cmp.Equal(MinuteOfArc.ToDegrees(89.0), 1.48333, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.48333, MinuteOfArc.ToDegrees(89.0));
    }
    if !cmp.Equal(MinuteOfArc.ToDegrees(160.5), 2.675, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.675, MinuteOfArc.ToDegrees(160.5));
    }
    if !cmp.Equal(MinuteOfArc.ToDegrees(0.9), 0.015, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.015, MinuteOfArc.ToDegrees(0.9));
    }
}

func TestConvertKnownMinuteOfArcToRadians(t * testing.T) {
    if !cmp.Equal(MinuteOfArc.ToRadians(1790.0), 0.5206899, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.5206899, MinuteOfArc.ToRadians(1790.0));
    }
    if !cmp.Equal(MinuteOfArc.ToRadians(9999.0), 2.908591, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.908591, MinuteOfArc.ToRadians(9999.0));
    }
    if !cmp.Equal(MinuteOfArc.ToRadians(12345.0), 3.5910149, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 3.5910149, MinuteOfArc.ToRadians(12345.0));
    }
}

func TestConvertKnownMinuteOfArcToGradians(t * testing.T) {
    if !cmp.Equal(MinuteOfArc.ToGradians(300.0), 5.55556, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5.55556, MinuteOfArc.ToGradians(300.0));
    }
    if !cmp.Equal(MinuteOfArc.ToGradians(1009.0), 18.68519, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 18.68519, MinuteOfArc.ToGradians(1009.0));
    }
    if !cmp.Equal(MinuteOfArc.ToGradians(6700.5), 124.083335, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 124.083335, MinuteOfArc.ToGradians(6700.5));
    }
}

func TestConvertKnownMinuteOfArcToMilliradians(t * testing.T) {
    if !cmp.Equal(MinuteOfArc.ToMilliradians(600.0), 174.533, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 174.533, MinuteOfArc.ToMilliradians(600.0));
    }
    if !cmp.Equal(MinuteOfArc.ToMilliradians(90.7), 26.38356, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 26.38356, MinuteOfArc.ToMilliradians(90.7));
    }
    if !cmp.Equal(MinuteOfArc.ToMilliradians(1700.0), 494.51, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 494.51, MinuteOfArc.ToMilliradians(1700.0));
    }
}

func TestConvertKnownMinuteOfArcToSecondsOfArc(t * testing.T) {
    if !cmp.Equal(MinuteOfArc.ToSecondsOfArc(0.9), 54.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 54.0, MinuteOfArc.ToSecondsOfArc(0.9));
    }
    if !cmp.Equal(MinuteOfArc.ToSecondsOfArc(70.0), 4200.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 4200.0, MinuteOfArc.ToSecondsOfArc(70.0));
    }
    if !cmp.Equal(MinuteOfArc.ToSecondsOfArc(901.6), 54096.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 54096.0, MinuteOfArc.ToSecondsOfArc(901.6));
    }
}

func TestConvertKnownRadiansToDegrees(t * testing.T) {
    if !cmp.Equal(Radians.ToDegrees(4.5), 257.831, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 257.831, Radians.ToDegrees(4.5));
    }
    if !cmp.Equal(Radians.ToDegrees(0.9), 51.5662, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 51.5662, Radians.ToDegrees(0.9));
    }
    if !cmp.Equal(Radians.ToDegrees(78.9), 4520.637, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 4520.637, Radians.ToDegrees(78.9));
    }
}

func TestConvertKnownRadiansToGradians(t * testing.T) {
    if !cmp.Equal(Radians.ToGradians(5.0), 318.31, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 318.31, Radians.ToGradians(5.0));
    }
    if !cmp.Equal(Radians.ToGradians(0.9), 57.2958, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 57.2958, Radians.ToGradians(0.9));
    }
    if !cmp.Equal(Radians.ToGradians(89.0), 5665.92, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5665.92, Radians.ToGradians(89.0));
    }
}

func TestConvertKnownRadiansToMilliradians(t * testing.T) {
    if !cmp.Equal(Radians.ToMilliradians(5.0), 5000.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5000.0, Radians.ToMilliradians(5.0));
    }
    if !cmp.Equal(Radians.ToMilliradians(0.13), 130.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 130.0, Radians.ToMilliradians(0.13));
    }
    if !cmp.Equal(Radians.ToMilliradians(0.13), 130.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 130.0, Radians.ToMilliradians(0.13));
    }
    if !cmp.Equal(Radians.ToMilliradians(89.1), 89100.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 89100.0, Radians.ToMilliradians(89.1));
    }
}

func TestConvertKnownRadiansToMinuteOfArc(t * testing.T) {
    if !cmp.Equal(Radians.ToMinuteOfArc(6.0), 20626.480624709635, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 20626.480624709635, Radians.ToMinuteOfArc(6.0));
    }
    if !cmp.Equal(Radians.ToMinuteOfArc(0.8), 2750.2, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2750.2, Radians.ToMinuteOfArc(0.8));
    }
    if !cmp.Equal(Radians.ToMinuteOfArc(2.3), 7906.82, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 7906.82, Radians.ToMinuteOfArc(2.3));
    }
}

func TestConvertKnownRadiansToSecondsOfArc(t * testing.T) {
    if !cmp.Equal(Radians.ToSecondsOfArc(0.8), 165011.84499767708, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 165011.84499767708, Radians.ToSecondsOfArc(0.8));
    }
    if !cmp.Equal(Radians.ToSecondsOfArc(0.001), 206.26481, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 206.26481, Radians.ToSecondsOfArc(0.001));
    }
    if !cmp.Equal(Radians.ToSecondsOfArc(0.9), 185638.32562238674, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 185638.32562238674, Radians.ToSecondsOfArc(0.9));
    }
}

func TestConvertKnownSecondsOfArcToDegrees(t * testing.T) {
    if !cmp.Equal(SecondsOfArc.ToDegrees(900.0), 0.25, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.25, SecondsOfArc.ToDegrees(900.0));
    }
    if !cmp.Equal(SecondsOfArc.ToDegrees(123.4), 0.034277778, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.034277778, SecondsOfArc.ToDegrees(123.4));
    }
    if !cmp.Equal(SecondsOfArc.ToDegrees(8000.0), 2.222222, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.222222, SecondsOfArc.ToDegrees(8000.0));
    }
}

func TestConvertKnownSecondsOfArcToRadians(t * testing.T) {
    if !cmp.Equal(SecondsOfArc.ToRadians(190000.0), 0.921145994, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.921145994, SecondsOfArc.ToRadians(190000.0));
    }
    if !cmp.Equal(SecondsOfArc.ToRadians(88990.0), 0.43143569, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.43143569, SecondsOfArc.ToRadians(88990.0));
    }
    if !cmp.Equal(SecondsOfArc.ToRadians(100000.0), 0.48481368, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.48481368, SecondsOfArc.ToRadians(100000.0));
    }
}

func TestConvertKnownSecondsOfArcToGradians(t * testing.T) {
    if !cmp.Equal(SecondsOfArc.ToGradians(1000.0), 0.308642, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.308642, SecondsOfArc.ToGradians(1000.0));
    }
    if !cmp.Equal(SecondsOfArc.ToGradians(809.0), 0.249691, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.249691, SecondsOfArc.ToGradians(809.0));
    }
    if !cmp.Equal(SecondsOfArc.ToGradians(1567.9), 0.483919761, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.483919761, SecondsOfArc.ToGradians(1567.9));
    }
}

func TestConvertKnownSecondsOfArcToMilliradians(t * testing.T) {
    if !cmp.Equal(SecondsOfArc.ToMilliradians(1234.0), 5.982601, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 5.982601, SecondsOfArc.ToMilliradians(1234.0));
    }
    if !cmp.Equal(SecondsOfArc.ToMilliradians(909.0), 4.40696, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 4.40696, SecondsOfArc.ToMilliradians(909.0));
    }
    if !cmp.Equal(SecondsOfArc.ToMilliradians(190009.0), 921.189627, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 921.189627, SecondsOfArc.ToMilliradians(190009.0));
    }
}

func TestConvertKnownSecondsOfArcToMinuteOfArc(t * testing.T) {
    if !cmp.Equal(SecondsOfArc.ToMinuteOfArc(100.0), 1.66667, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.66667, SecondsOfArc.ToMinuteOfArc(100.0));
    }
    if !cmp.Equal(SecondsOfArc.ToMinuteOfArc(908.0), 15.1333, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 15.1333, SecondsOfArc.ToMinuteOfArc(908.0));
    }
    if !cmp.Equal(SecondsOfArc.ToMinuteOfArc(8091.0), 134.85, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 134.85, SecondsOfArc.ToMinuteOfArc(8091.0));
    }
}

