// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

package fueleconomy

import (
	"testing"
	"math"
	"github.com/google/go-cmp/cmp"
)

func withinTolerance() cmp.Option {
	return cmp.Comparer(func(x, y float64) bool {
		delta := math.Abs(x - y)
		mean := math.Abs(x + y) / 2.0
		return delta / mean < 0.01
	})
}
func TestConvertKnownKilometrePerLitreToUSMilesPerGallon(t * testing.T) {
    if !cmp.Equal(KilometrePerLitre.ToUSMilesPerGallon(109.0), 256.384, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 256.384, KilometrePerLitre.ToUSMilesPerGallon(109.0));
    }
    if !cmp.Equal(KilometrePerLitre.ToUSMilesPerGallon(9.4), 22.1102, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 22.1102, KilometrePerLitre.ToUSMilesPerGallon(9.4));
    }
    if !cmp.Equal(KilometrePerLitre.ToUSMilesPerGallon(1.3), 3.05779, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 3.05779, KilometrePerLitre.ToUSMilesPerGallon(1.3));
    }
}

func TestConvertKnownKilometrePerLitreToMilesPerGallon(t * testing.T) {
    if !cmp.Equal(KilometrePerLitre.ToMilesPerGallon(5.0), 14.124, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 14.124, KilometrePerLitre.ToMilesPerGallon(5.0));
    }
    if !cmp.Equal(KilometrePerLitre.ToMilesPerGallon(180.0), 508.466, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 508.466, KilometrePerLitre.ToMilesPerGallon(180.0));
    }
    if !cmp.Equal(KilometrePerLitre.ToMilesPerGallon(5.4), 15.254, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 15.254, KilometrePerLitre.ToMilesPerGallon(5.4));
    }
}

func TestConvertKnownKilometrePerLitreToLitresPer100Kilometres(t * testing.T) {
    if !cmp.Equal(KilometrePerLitre.ToLitresPer100Kilometres(109.0), 0.917431, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.917431, KilometrePerLitre.ToLitresPer100Kilometres(109.0));
    }
    if !cmp.Equal(KilometrePerLitre.ToLitresPer100Kilometres(0.8), 125.0, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 125.0, KilometrePerLitre.ToLitresPer100Kilometres(0.8));
    }
    if !cmp.Equal(KilometrePerLitre.ToLitresPer100Kilometres(2.3), 43.4783, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 43.4783, KilometrePerLitre.ToLitresPer100Kilometres(2.3));
    }
}

func TestConvertKnownLitresPer100KilometresToKilometrePerLitre(t * testing.T) {
    if !cmp.Equal(LitresPer100Kilometres.ToKilometrePerLitre(0.7), 142.857, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 142.857, LitresPer100Kilometres.ToKilometrePerLitre(0.7));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToKilometrePerLitre(109.0), 0.917431, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.917431, LitresPer100Kilometres.ToKilometrePerLitre(109.0));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToKilometrePerLitre(0.012), 8333.3333, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 8333.3333, LitresPer100Kilometres.ToKilometrePerLitre(0.012));
    }
}

func TestConvertKnownLitresPer100KilometresToMilesPerGallon(t * testing.T) {
    if !cmp.Equal(LitresPer100Kilometres.ToMilesPerGallon(107.0), 2.64001, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.64001, LitresPer100Kilometres.ToMilesPerGallon(107.0));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToMilesPerGallon(0.8), 353.101, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 353.101, LitresPer100Kilometres.ToMilesPerGallon(0.8));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToMilesPerGallon(0.02), 14124.05, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 14124.05, LitresPer100Kilometres.ToMilesPerGallon(0.02));
    }
}

func TestConvertKnownLitresPer100KilometresToUSMilesPerGallon(t * testing.T) {
    if !cmp.Equal(LitresPer100Kilometres.ToUSMilesPerGallon(12.0), 19.6012, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 19.6012, LitresPer100Kilometres.ToUSMilesPerGallon(12.0));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToUSMilesPerGallon(0.3), 784.049, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 784.049, LitresPer100Kilometres.ToUSMilesPerGallon(0.3));
    }
    if !cmp.Equal(LitresPer100Kilometres.ToUSMilesPerGallon(1.5), 156.81, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 156.81, LitresPer100Kilometres.ToUSMilesPerGallon(1.5));
    }
}

func TestConvertKnownMilesPerGallonToKilometrePerLitre(t * testing.T) {
    if !cmp.Equal(MilesPerGallon.ToKilometrePerLitre(12.0), 4.24807, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 4.24807, MilesPerGallon.ToKilometrePerLitre(12.0));
    }
    if !cmp.Equal(MilesPerGallon.ToKilometrePerLitre(8.2), 2.90285, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.90285, MilesPerGallon.ToKilometrePerLitre(8.2));
    }
    if !cmp.Equal(MilesPerGallon.ToKilometrePerLitre(0.5), 0.177003, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.177003, MilesPerGallon.ToKilometrePerLitre(0.5));
    }
}

func TestConvertKnownMilesPerGallonToUSMilesPerGallon(t * testing.T) {
    if !cmp.Equal(MilesPerGallon.ToUSMilesPerGallon(1.4), 1.16574, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.16574, MilesPerGallon.ToUSMilesPerGallon(1.4));
    }
    if !cmp.Equal(MilesPerGallon.ToUSMilesPerGallon(1008.0), 839.3356, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 839.3356, MilesPerGallon.ToUSMilesPerGallon(1008.0));
    }
    if !cmp.Equal(MilesPerGallon.ToUSMilesPerGallon(0.8), 0.666139, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.666139, MilesPerGallon.ToUSMilesPerGallon(0.8));
    }
}

func TestConvertKnownMilesPerGallonToLitresPer100Kilometres(t * testing.T) {
    if !cmp.Equal(MilesPerGallon.ToLitresPer100Kilometres(22.3), 12.66731, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 12.66731, MilesPerGallon.ToLitresPer100Kilometres(22.3));
    }
    if !cmp.Equal(MilesPerGallon.ToLitresPer100Kilometres(0.4), 706.202, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 706.202, MilesPerGallon.ToLitresPer100Kilometres(0.4));
    }
    if !cmp.Equal(MilesPerGallon.ToLitresPer100Kilometres(5.2), 54.3233, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 54.3233, MilesPerGallon.ToLitresPer100Kilometres(5.2));
    }
}

func TestConvertKnownUSMilesPerGallonToKilometrePerLitre(t * testing.T) {
    if !cmp.Equal(USMilesPerGallon.ToKilometrePerLitre(23.0), 9.77831, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 9.77831, USMilesPerGallon.ToKilometrePerLitre(23.0));
    }
    if !cmp.Equal(USMilesPerGallon.ToKilometrePerLitre(7.0), 2.97601, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.97601, USMilesPerGallon.ToKilometrePerLitre(7.0));
    }
    if !cmp.Equal(USMilesPerGallon.ToKilometrePerLitre(0.9), 0.382629, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 0.382629, USMilesPerGallon.ToKilometrePerLitre(0.9));
    }
}

func TestConvertKnownUSMilesPerGallonToMilesPerGallon(t * testing.T) {
    if !cmp.Equal(USMilesPerGallon.ToMilesPerGallon(109.0), 130.9036, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 130.9036, USMilesPerGallon.ToMilesPerGallon(109.0));
    }
    if !cmp.Equal(USMilesPerGallon.ToMilesPerGallon(78.2), 93.91432, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 93.91432, USMilesPerGallon.ToMilesPerGallon(78.2));
    }
    if !cmp.Equal(USMilesPerGallon.ToMilesPerGallon(0.9), 1.08086, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 1.08086, USMilesPerGallon.ToMilesPerGallon(0.9));
    }
}

func TestConvertKnownUSMilesPerGallonToLitresPer100Kilometres(t * testing.T) {
    if !cmp.Equal(USMilesPerGallon.ToLitresPer100Kilometres(111.0), 2.11905, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 2.11905, USMilesPerGallon.ToLitresPer100Kilometres(111.0));
    }
    if !cmp.Equal(USMilesPerGallon.ToLitresPer100Kilometres(0.4), 588.036, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 588.036, USMilesPerGallon.ToLitresPer100Kilometres(0.4));
    }
    if !cmp.Equal(USMilesPerGallon.ToLitresPer100Kilometres(5.2), 45.2336, withinTolerance()) {
        t.Fatalf("Expected %f, was %f", 45.2336, USMilesPerGallon.ToLitresPer100Kilometres(5.2));
    }
}

